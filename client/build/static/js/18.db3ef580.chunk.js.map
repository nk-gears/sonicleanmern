{"version":3,"sources":["components/common/LoadingIndicator/LoadingIndicator.js","components/common/LoadingIndicator/index.js","components/common/FormInput/index.js","utils/validate.js","components/common/FormPhoneInput/index.js","assets/img/logo.png","components/LogoModal/LogoModal.js","views/Profile/components/Company/Company.js","views/Profile/components/Company/index.js"],"names":["LoadingIndicator","react_default","a","createElement","className","FormInput","_ref","field","_ref$form","form","touched","errors","props","Object","_Volumes_Source_ReactApps_sonicleanmern_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","assign","invalid","name","reactstrap__WEBPACK_IMPORTED_MODULE_3__","validate","getValidationSchema","values","validationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","inner","reduce","_Volumes_Source_ReactApps_sonicleanmern_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Volumes_Source_ReactApps_sonicleanmern_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","path","phoneNumberMask","cardnumberMask","expiredateMask","FormPhoneInput","react_text_mask__WEBPACK_IMPORTED_MODULE_3___default","mask","module","exports","__webpack_require__","p","connect","_ref2","company","companyData","uploadState","companyLogo","dispatch","fetchCompany","fetchCompanyData","uploadLogo","data","uploadCompanyLogo","_useState","useState","_useState2","slicedToArray","pictures","setPictures","_useState3","_useState4","modal","setModal","useEffect","REQUEST_STATUS","SUCCESS","src","undefined","require","getUploadedImage","onClick","alt","Modal","isOpen","ModalHeader","toggle","ModalBody","Row","Col","compiled_default","withIcon","buttonText","onChange","picture","imgExtension","maxFileSize","withPreview","singleImage","ModalFooter","Button","type","console","log","FormData","append","color","PENDING","companySchema","Yup","shape","companyName","min","required","phoneNumber","companyBio","max","_ref3","state","updateCompany","updateCompanyData","formik_esm","initialValues","onSubmit","render","handleSubmit","isValid","handleChange","handleBlur","Form","noValidate","md","FormGroup","Label","component","Input","id","autoComplete","valid","autoFocus","onBlur","placeholder","value","FormFeedback","components_LogoModal_LogoModal","logo","disabled","Company"],"mappings":"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","file":"static/js/18.db3ef580.chunk.js","sourcesContent":["import React from 'react'\n\nconst LoadingIndicator = () => {\n    return (\n        <div className=\"sk-chasing-dots\">\n            <div className=\"sk-child sk-dot1\"></div>\n            <div className=\"sk-child sk-dot2\"></div>\n        </div>\n    )\n}\n\nexport default LoadingIndicator\n","import LoadingIndicator from './LoadingIndicator'\n\nexport default LoadingIndicator","import React from 'react'\nimport { FormFeedback, Input } from 'reactstrap'\nimport PropTypes from 'prop-types'\n\nconst FormInput = ({field, form: {touched, errors}, ...props}) => (\n    <div>\n        <Input\n            invalid={!!(touched[field.name] && errors[field.name])}\n            {...field}\n            {...props} />\n        {touched[field.name] && errors[field.name] && <FormFeedback>{errors[field.name]}</FormFeedback>}\n    </div>\n);\n\nFormInput.propTypes = {\n    meta: PropTypes.object,\n    type: PropTypes.string,\n    className: PropTypes.string,\n}\n\nexport default FormInput\n","export const validate = (getValidationSchema) => {\n    return (values) => {\n      const validationSchema = getValidationSchema(values)\n      try {\n        validationSchema.validateSync(values, { abortEarly: false })\n        return {}\n      } catch (error) {\n        return getErrorsFromValidationError(error)\n      }\n    }\n  }\n  \nexport const getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n      return {\n        ...errors,\n        [error.path]: error.errors[FIRST_ERROR],\n      }\n    }, {})\n  }\n\nexport const phoneNumberMask = [\n    \"(\",\n    /[1-9]/,\n    /\\d/,\n    /\\d/,\n    \")\",\n    \" \",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \"-\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/\n];\n\nexport const cardnumberMask = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/];\nexport const expiredateMask = [/\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]","import React from 'react'\nimport { FormFeedback  } from 'reactstrap'\nimport MaskedInput from \"react-text-mask\";\nimport { phoneNumberMask } from 'utils/validate'\nimport PropTypes from 'prop-types'\n\nconst FormPhoneInput = ({field, form: {touched, errors}, ...props}) => (\n    <div>\n        {/* <Input\n            invalid={!!(touched[field.name] && errors[field.name])}\n            {...field}\n            {...props} />\n        {touched[field.name] && errors[field.name] && <FormFeedback>{errors[field.name]}</FormFeedback>} */}\n\n        <MaskedInput\n            mask={phoneNumberMask}\n            {...props}\n            {...field}\n            className={\n                errors[field.name] && touched[field.name]\n                ? \"is-invalid form-control\"\n                : \"form-control\"\n            }\n            />\n        {touched[field.name] && errors[field.name] && <FormFeedback>{errors[field.name]}</FormFeedback>}\n    </div>\n);\n\nFormPhoneInput.propTypes = {\n    meta: PropTypes.object,\n    type: PropTypes.string,\n    className: PropTypes.string,\n}\n\nexport default FormPhoneInput\n","module.exports = __webpack_public_path__ + \"static/media/logo.cd9cce34.png\";","import React, {useEffect, useState} from 'react'\nimport { connect } from \"react-redux\";\nimport { fetchCompanyData, uploadCompanyLogo } from \"modules/company\"\nimport ImageUploader from 'react-images-upload';\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Row,\n    Col,\n    Button\n} from 'reactstrap'\nimport { REQUEST_STATUS } from '_config/constants'\nimport {getUploadedImage} from '_helpers/helper'\nimport './LogoModal.scss'\n\nconst LogoModal = ({\n    uploadState,\n    companyLogo,\n    uploadLogo\n}) => {\n    const [pictures, setPictures] = useState([])\n    const [modal, setModal] = useState(false)\n\n    useEffect(()=> {\n        if(uploadState===REQUEST_STATUS.SUCCESS) {\n            setModal(false)\n        }\n    }, [uploadState])\n\n\n    const onDrop = (picture) => {\n        setPictures(picture)\n    }\n\n    const uploadImage = () => {\n        console.log(pictures[0])\n        var data = new FormData();\n        data.append('file', pictures[0])\n        console.log(data)\n        uploadLogo(data)\n    }\n\n    return (\n        <div>\n            <img \n                src={companyLogo === undefined ? require('../../assets/img/logo.png') : getUploadedImage(companyLogo) } \n                className=\"img-avatar120-3 avatarmodal__avatar\"\n                onClick={()=>setModal(true)}\n                alt=\"user\" \n            />\n            <Modal \n            isOpen={modal}\n            className={'modal-primary modal-md'}\n            >\n                <ModalHeader\n                    toggle={()=>setModal(false)}\n                >\n                    Upload CompanyLogo\n                </ModalHeader>\n                <ModalBody>\n                    <Row>\n                        <Col>\n                            <ImageUploader\n                                withIcon={true}\n                                buttonText='Choose images'\n                                onChange={onDrop}\n                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                maxFileSize={5242880}\n                                withPreview={true}\n                                singleImage={true}\n                            />\n                        </Col>\n                    </Row>\n                </ModalBody>\n                <ModalFooter>\n                    <Button type=\"button\" onClick={uploadImage} color=\"primary\" >{uploadState===REQUEST_STATUS.PENDING ? 'Wait...' : 'Submit'}</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = ({ company }) => {\n    const { companyData, uploadState, companyLogo } = company;\n    return { companyData, uploadState, companyLogo };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCompany: () => {\n            dispatch(fetchCompanyData());\n        },\n        uploadLogo: (data) => {\n            dispatch(uploadCompanyLogo(data));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LogoModal);\n\n","import React, { useEffect } from 'react'\nimport { \n    Row, \n    Col, \n    Form, \n    FormGroup, \n    Input, \n    Label, \n    FormFeedback, \n    Button \n} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { Formik, Field } from 'formik';\nimport FormInput from 'components/common/FormInput'\nimport FormPhoneInput from 'components/common/FormPhoneInput'\nimport LoadingIndicator from 'components/common/LoadingIndicator'\nimport LogoModal from 'components/LogoModal/LogoModal'\nimport { fetchCompanyData, updateCompanyData } from 'modules/company'\nimport { REQUEST_STATUS } from '_config/constants';\nimport * as Yup from 'yup'\n\nimport './Company.scss'\n\nconst companySchema = Yup.object().shape({\n    companyName: Yup.string()\n        .min(2, `First name has to be at least 2 characters`)\n        .required('First name is required'),\n    phoneNumber: Yup.string()\n        .min(8, `Phone number has to be at least 6 character`)\n        .required('Phone number is required!'),\n    companyBio: Yup.string()\n        .max(250, `Bio has be max 25 characeters`)\n})\n\nconst Company = ({\n    state,\n    companyData,\n    fetchCompany,\n    updateCompany,\n    companyLogo\n}) => {\n\n    useEffect(() => {\n        fetchCompany()\n    }, [])\n\n    const onSubmit = (data) => {\n        updateCompany(data)\n    }\n\n    return (\n        <div className=\"Company mt-5\">\n            <Row>\n                <Col>\n                {\n                        state===REQUEST_STATUS.PENDING ? <LoadingIndicator /> : \n                        <Formik\n                            initialValues={companyData}\n                            validationSchema={companySchema}\n                            onSubmit={onSubmit}\n                            render={\n                                ({\n                                    handleSubmit,\n                                    isValid,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    values\n                                }) => (\n                                        <Form onSubmit={handleSubmit} noValidate name='simpleForm'>\n                                            <Row>\n                                                <Col md={6}>\n                                                    <FormGroup>\n                                                        <Label >Company Name*</Label>\n                                                        <Field name=\"companyName\" type={'text'} component={FormInput}/>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <FormGroup>\n                                                        <Label>Phone Number</Label>\n                                                        <Field name=\"phoneNumber\" type={'text'} component={FormPhoneInput} />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label >Company Bio (optional)</Label>\n                                                        <Input\n                                                            name=\"companyBio\"\n                                                            className=\"position-relative\"\n                                                            type=\"textarea\"\n                                                            id=\"companyBio\"\n                                                            autoComplete=\"given-name\"\n                                                            valid={!errors.companyBio}\n                                                            invalid={touched.companyBio && !!errors.companyBio}\n                                                            autoFocus={true}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            placeholder = \"This information will be displayed on your company's dealer locator listining on www.sonicleanusa.com.(e.g. family owned business since 1975...)\"\n                                                            value={values.companyBio} />\n                                                            <h6 className=\"text-muted position-absolute font-weight-normal maxlength\">max 250 characters</h6>\n                                                        <FormFeedback className=\"position-absolute bio-error\">{errors.companyBio}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md={6}>\n                                                    <Label >Upload company logo (50px by 50px)</Label>\n                                                    <LogoModal logo={companyLogo} />\n                                                </Col>\n                                            </Row>\n                                            <hr />\n                                            <Row className=\"float-right\">\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Button \n                                                            type=\"submit\" \n                                                            color=\"success\" \n                                                            className=\"mr-1\" \n                                                            disabled={!isValid}\n                                                        >\n                                                            Submit\n                                                        </Button>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    )}\n                        />\n                    }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ company }) => {\n    const { companyData, companyLogo, state } = company;\n    return { companyData, companyLogo, state };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCompany: () => {\n            dispatch(fetchCompanyData());\n        },\n        updateCompany: (data) => {\n            dispatch(updateCompanyData(data));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Company);\n\n\n","import Company from './Company'\n\nexport default Company"],"sourceRoot":""}