{"version":3,"sources":["../node_modules/react-transition-group/TransitionGroup.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-transition-group/Transition.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/react-transition-group/utils/ChildMapping.js"],"names":["exports","__esModule","default","_propTypes","_interopRequireDefault","__webpack_require__","_react","_reactLifecyclesCompat","_ChildMapping","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","values","keys","map","k","TransitionGroup","_React$Component","subClass","superClass","props","context","_this","handleExited","bind","state","firstRender","create","constructor","__proto__","_proto","getChildContext","transitionGroup","isMounting","appeared","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","nextProps","_ref","prevChildMapping","children","getInitialChildMapping","getNextChildMapping","child","node","currentChildMapping","getChildMapping","onExited","setState","render","_this$props","Component","component","childFactory","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","appear","enter","exit","createElement","childContextTypes","object","isRequired","propTypes","defaultProps","_default","polyfill","module","componentWillMount","undefined","componentWillReceiveProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","r","__webpack_exports__","d","__suppressDeprecationWarning","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","newObj","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_reactDom","Transition","initialStatus","parentGroup","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","updateStatus","nextStatus","cancelNextCallback","getTimeouts","timeout","mounting","findDOMNode","performEnter","performExit","_this2","appearing","timeouts","enterTimeout","onEnter","safeSetState","onEntering","onTransitionEnd","onEntered","_this3","onExit","onExiting","cancel","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","childProps","Children","only","cloneElement","noop","contextTypes","classNamesShape","timeoutsShape","mergeChildMappings","getProp","nextChildMapping","forEach","isValidElement","hasPrev","hasNext","prevChild","isLeaving","mapFn","result","c","mapper","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","prop"],"mappings":"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","file":"static/js/1.6699df8f.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _ChildMapping = require(\"./utils/ChildMapping\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n  /**\n   * The `<TransitionGroup>` component manages a set of transition components\n   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n   * components, `<TransitionGroup>` is a state machine for managing the mounting\n   * and unmounting of components over time.\n   *\n   * Consider the example below. As items are removed or added to the TodoList the\n   * `in` prop is toggled automatically by the `<TransitionGroup>`.\n   *\n   * Note that `<TransitionGroup>`  does not define any animation behavior!\n   * Exactly _how_ a list item animates is up to the individual transition\n   * component. This means you can mix and match animations across different list\n   * items.\n   */\n\n};\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: {\n        isMounting: !this.appeared\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n    this.mounted = true;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  };\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return children;\n    }\n\n    return _react.default.createElement(Component, props, children);\n  };\n\n  return TransitionGroup;\n}(_react.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes.default.object.isRequired\n};\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: _propTypes.default.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: _propTypes.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes.default.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  } // Binding \"this\" is important for shallow renderer support.\n\n\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n} // React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\n\n\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n\n\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  } // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n\n\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  } // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n\n\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number,\n  appear: _propTypes.default.number\n}).isRequired]) : null;\nexports.timeoutsShape = timeoutsShape;\nvar classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]) : null;\nexports.classNamesShape = classNamesShape;","\"use strict\";\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\nexports.getInitialChildMapping = getInitialChildMapping;\nexports.getNextChildMapping = getNextChildMapping;\n\nvar _react = require(\"react\");\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\n\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0, _react.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\n\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0, _react.isValidElement)(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}"],"sourceRoot":""}